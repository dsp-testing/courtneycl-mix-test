<div class="component-case-protocol container">
  <Context get={{ HygeiaWeb, auth: auth }}>
    <HygeiaWeb.PersonLive.Header person={{ @case.person }} id="header" />

    <div class="card">
      <div class="card-header">
        <HygeiaWeb.CaseLive.Navigation case={{ @case }} id="navigation" />
      </div>
      <div class="card-body">
        <Form 
          for={{ @protocol_entry_changeset }} 
          change="validate" 
          submit="save" 
          opts={{ autocomplete: "off", id: "protocol-form", "phx-hook": "BlockNavigation" }}
        >
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col">{{ gettext("Type") }}</th>
                <th scope="col">{{ gettext("Date") }}</th>
                <th scope="col">{{ gettext("Author") }}</th>
                <th scope="col" colspan="2">{{ gettext("Meta") }}</th>
              </tr>
            </thead>
            <tbody>
              <tr :if={{ authorized?(ProtocolEntry, :create, auth, %{case: @case}) }}>
                <td class="align-middle">
                  <Field name={{ :type }}>
                    <Select
                      class="form-control"
                      opts={{ prompt: gettext("Choose Type") }}
                      field={{ :type }}
                      options={{ List.flatten([
                        [{gettext("Note"), "note"}],
                        (if CaseContext.person_has_mobile_number?(@case.person), do: [{gettext("SMS"), "sms"}], else: []),
                        (if CaseContext.person_has_email?(@case.person), do: [{gettext("Email"), "email"}], else: []),
                      ]) }}
                    />
                    <FormError />
                  </Field>
                </td>
                <td class="align-middle">
                  {{ gettext("Now") }}
                </td>
                <td class="align-middle">
                  {{ unless is_nil(auth), do: auth.display_name }}
                </td>
                <td class="align-middle">
                  <InputContext assigns={{ assigns }} :let={{ form: form }}>
                    <PolimorphicInputs :if={{ Ecto.Changeset.get_field(form.source, :type) == "note" }} field={{ :entry }} type={{ :note }} id="poly-inputs">
                      <Field name={{ :note }}>
                        <div class="input-group">
                          <div class="input-group-prepend">
                            <Label class="input-group-text">{{ gettext("Note") }}</Label>
                          </div>
                          <TextInput class="form-control" />
                        </div>
                        <FormError />
                      </Field>
                    </PolimorphicInputs>
                    <PolimorphicInputs :if={{ Ecto.Changeset.get_field(form.source, :type) == "sms" }} field={{ :entry }} type={{ :sms }} id="poly-inputs">
                      <Field name={{ :text }}>
                        <div class="input-group">
                          <div class="input-group-prepend">
                            <Label class="input-group-text">{{ gettext("Text") }}</Label>
                          </div>
                          <TextArea class="form-control" rows="10" />
                        </div>
                        <FormError />
                      </Field>
                    </PolimorphicInputs>
                    <PolimorphicInputs :if={{ Ecto.Changeset.get_field(form.source, :type) == "email" }} field={{ :entry }} type={{ :email }} id="poly-inputs">
                      <Field name={{ :subject }}>
                        <div class="input-group mb-1">
                          <div class="input-group-prepend">
                            <Label class="input-group-text">{{ gettext("Subject") }}</Label>
                          </div>
                          <TextInput class="form-control" />
                        </div>
                        <FormError />
                      </Field>
                      <Field name={{ :body }}>
                        <div class="input-group">
                          <div class="input-group-prepend">
                            <Label class="input-group-text">{{ gettext("Body") }}</Label>
                          </div>
                          <TextArea class="form-control" rows="10" />
                        </div>
                        <FormError />
                      </Field>
                    </PolimorphicInputs>
                  </InputContext>
                </td>
                <td class="align-middle">
                  <button class="btn btn-primary" type="submit" phx-disable-with={{ gettext("Saving...") }} diabled={{ @protocol_entry_changeset.valid? }}>
                    <span class="oi oi-circle-check" title={{ gettext("Save") }} aria-hidden="true"></span>
                    {{ gettext("Save") }}
                  </button>
                </td>
              </tr>

              <tr :for={{ %ProtocolEntry{entry: %type{} = entry, inserted_at: inserted_at} = protocol_entry <- Enum.reverse(@case.protocol_entries) }}>
                <td>{{ protocol_type_type_name(type) }}</td>
                <td title={{ Cldr.DateTime.to_string!(inserted_at, HygeiaCldr) }}>
                  {{ Cldr.DateTime.Relative.to_string!(DateTime.from_naive!(inserted_at, "Etc/UTC"), HygeiaCldr, format: :short) }}
                </td>
                <td>
                  <Link to={{ Routes.user_show_path(@socket, :show, get_protocol_user(protocol_entry)) }} :if={{ get_protocol_user(protocol_entry) != nil }}>
                    {{ protocol_entry |> get_protocol_user() |> Map.fetch!(:display_name) }}
                  </Link>
                </td>
                <td colspan="2" :if={{ type == Hygeia.CaseContext.Note }}>
                  {{ entry.note }}
                </td>
                <td colspan="2" :if={{ type == Hygeia.CaseContext.Email }}>
                  subject: {{ entry.subject }}
                  body: {{ entry.body }}
                </td>
              </tr>
            </tbody>
          </table>
        </Form>
      </div>
    </div>
  </Context>
</div>